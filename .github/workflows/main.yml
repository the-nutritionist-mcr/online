name: Main CI

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

permissions:
  contents: write
on:
  push:
    branches: ["main"]
    paths-ignore:
      - "**/*.md"

jobs:
  checks:
    runs-on: ubuntu-latest
    name: Run static checks
    strategy:
      fail-fast: false
      matrix:
        check: [test, types, lint]

    steps:
      - uses: actions/checkout@v3
      - name: Install Dependencies
        uses: ./.github/actions/setup-deps
      - run: npm run ${{ matrix.check }}

  cypress-deploy:
    runs-on: ubuntu-latest
    name: E2E Deploy
    if: github.ref == 'refs/heads/main'
    environment:
      name: cypress
      url: https://cypress.thenutritionistmcr.co.uk

    steps:
      - uses: actions/checkout@v3
      - name: Setup job

        uses: ./.github/actions/setup-deps
      - name: Get App Version
        shell: bash
        run: echo "APP_VERSION=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - run: npm run build
        env:
          APP_VERSION: ${{ env.APP_VERSION }}

      - run: npm run cdk -- deploy tnm-web-cypress-frontend-stack --require-approval never
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

  end-to-end-tests:
    timeout-minutes: 60
    name: "End to End Tests"
    needs: [cypress-deploy]
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Install Dependencies
        uses: ./.github/actions/setup-deps

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: Run Playwright tests
        run: npx playwright test

      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30

  test-deploy:
    runs-on: ubuntu-latest
    name: Test Deploy
    if: github.ref == 'refs/heads/main'
    environment:
      name: test
      url: https://test.app.thenutritionistmcr.co.uk

    needs: [end-to-end-tests, checks]
    steps:
      - uses: actions/checkout@v3
      - name: Setup job

        uses: ./.github/actions/setup-deps
      - name: Get App Version
        shell: bash
        run: echo "APP_VERSION=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - run: npm run build
        env:
          APP_VERSION: ${{ env.APP_VERSION }}

      - run: npm run cdk -- deploy tnm-web-test-frontend-stack --require-approval never
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

  prod-deploy:
    runs-on: ubuntu-latest
    name: Prod Deploy
    environment:
      name: production
      url: https://portal.thenutritionistmcr.co.uk

    if: github.ref == 'refs/heads/main'
    needs: [end-to-end-tests, checks]
    steps:
      - uses: actions/checkout@v3
      - name: Setup job

        uses: ./.github/actions/setup-deps
      - name: Get App Version
        shell: bash
        run: echo "APP_VERSION=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - run: npm run build
        env:
          APP_VERSION: ${{ env.APP_VERSION }}

      - run: npm run cdk -- deploy tnm-web-prod-frontend-stack --require-approval never
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

  deploy-docs:
    name: Deploy Docs
    if: always()
    runs-on: ubuntu-latest
    needs: [end-to-end-tests]

    environment:
      name: github-pages
      url: https://the-nutritionist-mcr.github.io/online/

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup node environment
        uses: ./.github/actions/setup-node-job

      - name: Download Playwright Report
        uses: actions/download-artifact@v3
        with:
          name: playwright-report
          path: docs/tests

      - name: Upload report
        if: always()
        uses: ./.github/actions/upload-pages
        with:
          path: ./docs

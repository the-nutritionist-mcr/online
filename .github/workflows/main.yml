name: Main CI

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

permissions:
  contents: write
  pages: write
  id-token: write

on:
  push:
    branches: ["main"]
    paths-ignore:
      - "**/*.md"
      - "tnm-docs/**"

jobs:
  checks:
    runs-on: ubuntu-latest
    name: Run static checks
    strategy:
      fail-fast: false
      matrix:
        check: [test, types, lint]

    steps:
      - uses: actions/checkout@v3
      - name: Install Dependencies
        uses: ./.github/actions/setup-deps
      - run: npm run ${{ matrix.check }}

  cypress-deploy:
    runs-on: ubuntu-latest
    name: E2E Deploy
    if: github.ref == 'refs/heads/main'
    environment:
      name: cypress
      url: https://cypress.app.thenutritionistmcr.com

    steps:
      - uses: actions/checkout@v3
      - name: Setup job

        uses: ./.github/actions/setup-deps
      - name: Get App Version
        shell: bash
        run: echo "APP_VERSION=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - run: npm run build
        env:
          APP_VERSION: ${{ env.APP_VERSION }}
          NEXT_PUBLIC_ENVIRONMENT: "cypress"

      - run: npm run cdk -- deploy tnm-web-cypress-frontend-stack --require-approval never
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

  end-to-end-tests:
    timeout-minutes: 60
    name: "End to End Tests"
    needs: [cypress-deploy]
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Install Dependencies
        uses: ./.github/actions/setup-deps

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: Run Playwright tests
        run: npx playwright test
        env:
          CHARGEBEE_TOKEN: ${{ secrets.CHARGEBEE_TOKEN }}
          NEXT_PUBLIC_ENVIRONMENT: "endtoend"

      # - name: Upload test report
      #   if: always()
      #   uses: ./.github/actions/upload-pages
      #   with:
      #     path: ./playwright-report

  test-deploy:
    runs-on: ubuntu-latest
    name: Test Deploy
    if: github.ref == 'refs/heads/main'
    environment:
      name: test
      url: https://test.app.thenutritionistmcr.com

    needs: [end-to-end-tests, checks]
    steps:
      - uses: actions/checkout@v3
      - name: Setup job

        uses: ./.github/actions/setup-deps
      - name: Get App Version
        shell: bash
        run: echo "APP_VERSION=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - run: npm run build
        env:
          APP_VERSION: ${{ env.APP_VERSION }}
          NEXT_PUBLIC_ENVIRONMENT: "test"

      - run: npm run cdk -- deploy tnm-web-test-frontend-stack --require-approval never
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

  prod-deploy:
    runs-on: ubuntu-latest
    name: Prod Deploy
    environment:
      name: production
      url: https://portal.thenutritionistmcr.com

    if: github.ref == 'refs/heads/main'
    needs: [end-to-end-tests, checks]
    steps:
      - uses: actions/checkout@v3
      - name: Setup job

        uses: ./.github/actions/setup-deps
      - name: Get App Version
        shell: bash
        run: echo "APP_VERSION=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - run: npm run build
        env:
          APP_VERSION: ${{ env.APP_VERSION }}
          NEXT_PUBLIC_ENVIRONMENT: "production"

      - run: npm run cdk -- deploy tnm-web-prod-frontend-stack --require-approval never
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

  deploy-users:
    runs-on: ubuntu-latest
    name: Deploy Credentials

    if: github.ref == 'refs/heads/main'
    needs: [prod-deploy, test-deploy]
    steps:
      - uses: actions/checkout@v3
      - name: Setup job

        uses: ./.github/actions/setup-deps
      - name: Get App Version
        shell: bash
        run: echo "APP_VERSION=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - run: npm run build
        env:
          APP_VERSION: ${{ env.APP_VERSION }}

      - run: npm run cdk -- deploy tnm-web-credentials-stack --require-approval never
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
